export const JS_RESERVED = new Set([
    'null',
    'true',
    'false',
    'break',
    'case',
    'catch',
    'class',
    'const',
    'continue',
    'debugger',
    'default',
    'delete',
    'do',
    'else',
    'export',
    'extends',
    'finally',
    'for',
    'function',
    'if',
    'import',
    'in',
    'instanceof',
    'new',
    'return',
    'super',
    'switch',
    'this',
    'throw',
    'try',
    'typeof',
    'var',
    'void',
    'while',
    'with',
    'yield',
    'enum',
    'implements',
    'interface',
    'let',
    'package',
    'private',
    'protected',
    'public',
    'static',
    'yield',
    'await',

    'Promise',
    'TBool',
    'TByte',
    'TI8',
    'TI16',
    'TI32',
    'TI64',
    'TDouble',
    'TString',
    'TBinary',
    'TMap',
    'TMapConstructor',
    'TSet',
    'TSetConstructor',
    'TList',
    'TListConstructor',
    'TData',
    'TException',
    'TStruct',
    'TUnion',
    'TService',
]);

/** check if a value is a valid js identifier */
export function isJsIdentifier(value: string): boolean {
    if (!/^[_a-z][_a-z0-9]*$/i.test(value)) return false;
    if (JS_RESERVED.has(value)) return false;
    return true;
}
